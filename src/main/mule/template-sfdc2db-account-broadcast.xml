<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<salesforce:sfdc-config name="Salesforce_Sfdc_config"
		doc:name="Salesforce Sfdc config" doc:id="38a0808d-8f32-4c87-a763-4db431b3c4cd">
		<salesforce:basic-connection username="${sfdc.username}"
			password="${sfdc.password}" securityToken="${sfdc.securityToken}" url="${sfdc.url}"/>
	</salesforce:sfdc-config>
	
	<db:config name="Database_Config" doc:name="Database Config" doc:id="59194256-5c2f-49ea-8146-c46fbbf41c61" >
		<db:my-sql-connection host="${db.host}" port="${db.port}" user="${db.user}" password="${db.password}" database="${db.name}" />
	</db:config>
	
	<configuration-properties file="mule-artifact.properties" doc:name="Configuration properties" doc:id="398fd02c-a527-47bb-b934-1fd10c398ee5" />
	<configuration-properties file="common.properties"
		doc:name="Configuration properties" doc:id="523e4eea-d00f-4213-bde7-a2764a635851" />
	<configuration-properties file="mule.dev.properties" doc:name="Configuration properties" doc:id="7115a17b-4a67-4607-8a7c-e8f91b0737de" />
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="4af34f10-992b-4bd7-b64e-b9fc226b9ccb" >
		<http:listener-connection host="0.0.0.0" port="${http.port}" />
	</http:listener-config>

	<flow name="pushFlow" doc:id="d06d2b84-ba6d-4c74-9b26-f6443b4e0245" >
		<http:listener config-ref="HTTP_Listener_config" path="/" doc:name="Listener" doc:id="8c55bfe5-1ace-4ff7-b08f-6937c33f7077" />
		<logger level="INFO" doc:name="Log about push notification" doc:id="33c971d9-fe8d-4219-8c3a-96eb41796dea" message="Triggered pushFlow" />
		<choice doc:name="Trigger policy" doc:id="ab49295a-6cfe-4ff6-b01e-ee10907e9442" >
			<when expression="#['PUSH' == '${trigger.policy}']" >
				<logger level="INFO" doc:name="Log input payload" doc:id="bf06bdfd-3f33-4de9-ba63-1c3c54a1b898" message="#[%dw 2.0 output application/json --- 'Message from outbound: ' ++ write(payload, 'application/xml', {'indent': false})]"/>
				<ee:transform doc:name="XML to Account" doc:id="319ace93-f407-4cbc-9bb3-51d89021f6ff" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.Envelope.Body.notifications.Notification.*sObject]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref name="businessLogicFlow" doc:name="businessLogicFlow" doc:id="a6d7734e-bc60-41cc-ad58-5ec889c92665" />
			
</when>
			<otherwise >
				<logger level="INFO" doc:name="Log about skipped message" doc:id="93bbbb8d-2cd9-4ee0-aa20-2f6caf49970c" message="Trigger policy has been set to POLL. Skipping this message"/>
			</otherwise>
		</choice>
		<set-payload value="&lt;soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:out='http://soap.sforce.com/2005/09/outbound'&gt;&lt;soapenv:Header/&gt;&lt;soapenv:Body&gt;&lt;out:notificationsResponse&gt;&lt;out:Ack&gt;true&lt;/out:Ack&gt;&lt;/out:notificationsResponse&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;" doc:name="Set Response Body" doc:id="28da47fd-44d5-41f1-b341-4d244f672a10" />
	
</flow>
	<flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73" >
		<scheduler doc:name="Scheduler" doc:id="58b7c776-fbee-4753-9bea-f6cc3e037efd" >
			<scheduling-strategy >
				<fixed-frequency frequency="${scheduler.frequency}" startDelay="${scheduler.start.delay}"/>
			</scheduling-strategy>
		</scheduler>
		<choice doc:name="Trigger policy" doc:id="b0cb7e8f-6903-4ae5-9f5b-6bbfe1848095" >
			<when expression="#['POLL' == '${trigger.policy}']" >
				<salesforce:query config-ref="Salesforce_Sfdc_config" doc:name="Query Accounts from Salesforce" doc:id="ebcf71a8-3192-4437-b2cb-b23f008afae5">
			<salesforce:salesforce-query>SELECT Id, AccountNumber, Description, Industry, LastModifiedDate, Name, NumberOfEmployees, ParentId FROM Account LIMIT 10</salesforce:salesforce-query>
		</salesforce:query>
				<flow-ref name="businessLogicFlow" doc:name="businessLogicFlow" doc:id="e16bf02c-b833-47de-afd5-2329ce1fab2b" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Log about skipped message" doc:id="242c440a-7556-414f-a413-ecdd6a09e7f1" message="Trigger policy has been set to PUSH. Skipping this message"/>
			</otherwise>
		</choice>
	
</flow>
	<flow name="businessLogicFlow" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67" >
		<batch:job jobName="syncAccountsBatch" doc:id="204892ae-0d97-4326-beae-310c8d52b7a6">
			<batch:process-records>
				<batch:step name="checkAccountInDatabaseStep" doc:id="89713774-362a-4e92-9bdc-41e31802bf38">
					<db:select config-ref="Database_Config" doc:name="Query Account by matching name from Database" doc:id="c93a20b0-4e0d-44ec-8c0f-831d31beea8b" queryTimeoutUnit="NANOSECONDS" target="recordExists" targetValue="#[payload[0]]">
						<db:sql >select AccountNumber, Name, Description, NumberOfEmployees, Industry, Phone, Type, SalesforceId from Account where Name = :paramName</db:sql>
						<db:input-parameters ><![CDATA[#[{'paramName' : payload.Name}]]]></db:input-parameters>
					</db:select>
				</batch:step>
				<batch:step name="insertAccountToDatabaseStep" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb" acceptExpression="vars.recordExists == null">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="1ad86a98-643e-494a-a90a-32daab0b03cc" size="${page.size}">
						<ee:transform doc:name="SFDC Account To Account" doc:id="d484063f-6d81-42ce-98ef-7cec51b04672">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map {
	Id 					: $.Id,
	Name 				: $.Name,
	AccountNumber 		: $.AccountNumber,
	Description 		: $.Description,
	NumberOfEmployees 	: $.NumberOfEmployees,
	Industry 			: $.Industry
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:bulk-insert config-ref="Database_Config" doc:name="Insert account in database" doc:id="f3626d1b-8b19-460e-83f8-1567930ecee8" >
							<db:sql >INSERT INTO Account (
	AccountNumber,
	Description,
	Name,
	NumberOfEmployees,
	Industry,
	SalesforceId,
	LastModifiedById,
	LastModifiedDate
) VALUES (
	:AccountNumber,
	:Description,
	:Name,
	:NumberOfEmployees,
	:Industry,
	:Id,
	CURRENT_USER,
	CURRENT_TIMESTAMP
)</db:sql>
						</db:bulk-insert>
						<logger level="INFO" doc:name="Log response" doc:id="1217b430-c797-4d39-a0a8-74743ffda9e7" message="#['Insert response: ' ++ write(payload, 'application/json')]"/>
					
</batch:aggregator>
				</batch:step>
				<batch:step name="updateAccountToDatabaseStep" doc:id="640c7d16-2443-48de-a7a0-084895350e5e" acceptExpression="vars.recordExists != null">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="ce71424b-dcd0-4d42-a141-df297df436b7" size="${page.size}">
						<ee:transform doc:name="SFDC Account To Account" doc:id="99109f6e-be0d-4aec-beee-e6907ff2bf4c" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map {
	Id 					: $.Id,
	Name 				: $.Name,
	AccountNumber 		: $.AccountNumber,
	Description 		: $.Description,
	NumberOfEmployees 	: $.NumberOfEmployees,
	Industry 			: $.Industry
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:bulk-update config-ref="Database_Config" doc:name="Update account in database" doc:id="5efd3956-44fa-4781-983f-e88dea393a2e" >
							<db:sql >UPDATE Account SET
AccountNumber = :AccountNumber, 
Description = :Description,  
NumberOfEmployees = :NumberOfEmployees,
Industry = :Industry,
LastModifiedDate = CURRENT_TIMESTAMP
WHERE Name = :Name</db:sql>
						</db:bulk-update>
						<logger level="INFO" doc:name="Log response" doc:id="8f8f706d-cb06-4fde-b1de-1412250266bd" message="#['Update response: ' ++ write(payload, 'application/json')]"/>
					</batch:aggregator>
				</batch:step>
			
</batch:process-records>
			<batch:on-complete>
				<ee:transform doc:name="Prepare migration result" doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
"Migration Report: \n"
 
++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis
++ "\n Total Records: "				++ payload.totalRecords
++ "\n Successful Records: "		++ payload.successfulRecords
++ "\n Failed Records: "			++ payload.failedRecords
++ "\n Loaded Records: "			++ payload.loadedRecords
++ "\n Processed Records: " 		++ payload.processedRecords]]></ee:set-payload>
							</ee:message>
						</ee:transform>
				<logger level="INFO" doc:name="Migration process has finished!" doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="#[payload]" />

			</batch:on-complete>
		
</batch:job>
	</flow>

</mule>